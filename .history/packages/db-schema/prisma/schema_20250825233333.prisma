// Prisma schema for NexusSync
// PostgreSQL 16 with pgvector extension

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Document {
  id          String    @id @default(cuid())
  source      String
  sourceId    String?
  title       String?
  content     String
  metadata    Json?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  relationsFrom Relationship[] @relation("FromDoc")
  relationsTo   Relationship[] @relation("ToDoc")
  embeddings Embedding[]
  @@index([source, sourceId])
}

model Relationship {
  id        String   @id @default(cuid())
  fromId    String
  toId      String
  type      String
  metadata  Json?
  createdAt DateTime @default(now())
  from      Document @relation("FromDoc", fields: [fromId], references: [id])
  to        Document @relation("ToDoc", fields: [toId], references: [id])
}

model Embedding {
  id         String   @id @default(cuid())
  documentId String
  // Use vector type via pgvector; Prisma doesn't have native vector type, so we store as float array for now
  // For production, consider a Prisma extension or raw SQL for vector columns
  vector     Float[]
  model      String
  dim        Int
  createdAt  DateTime @default(now())
  document   Document @relation(fields: [documentId], references: [id])
}

